package com.szbc.tool.payment.alipay;import android.text.TextUtils;import java.util.HashMap;/** * 支付宝支付结果 *  * @author Likun * @Data  * @Package  */public class AliPayResult extends EntityBase {	/**	 * 	 */	private static final long serialVersionUID = -1772204606158511924L;	public static final String SUCCESS = "9000";	/** 等待确认 */	public static final String WAIT_CONFIRM = "8000";	private static final HashMap<String, String> sResultStatus;	private String resultStatus;	private String result;	private String memo;	static {		sResultStatus = new HashMap<String, String>();		sResultStatus.put("9000", "支付成功");		sResultStatus.put("4000", "支付失败");		sResultStatus.put("8000", "正在处理中");		sResultStatus.put("4001", "数据格式不正确");		sResultStatus.put("4003", "该用户绑定的支付宝账户被冻结或不允许支付");		sResultStatus.put("4004", "该用户已解除绑定");		sResultStatus.put("4005", "绑定失败或没有绑定");		sResultStatus.put("4006", "订单支付失败");		sResultStatus.put("4010", "重新绑定账户");		sResultStatus.put("6000", "支付服务正在进行升级操作");		sResultStatus.put("6001", "支付已取消");		sResultStatus.put("6002", "您的网络好像不给力哦");	}	public AliPayResult(String rawResult) {		if (TextUtils.isEmpty(rawResult))			return;		String[] resultParams = rawResult.split(";");		for (String resultParam : resultParams) {			if (resultParam.startsWith("resultStatus")) {				resultStatus = gatValue(resultParam, "resultStatus");			}			if (resultParam.startsWith("result")) {				result = gatValue(resultParam, "result");			}			if (resultParam.startsWith("memo")) {				memo = gatValue(resultParam, "memo");			}		}	}	@Override	public String toString() {		return "resultStatus={" + resultStatus + "};memo={" + memo + "};result={" + result + "}";	}	private String gatValue(String content, String key) {		String prefix = key + "={";		return content.substring(content.indexOf(prefix) + prefix.length(), content.lastIndexOf("}"));	}	/**	 * @return the resultStatus	 */	public String getResultStatus() {		return resultStatus;	}	/**	 * 	 * @return the resultMsg	 */	public String getResultMessage() {		return sResultStatus.get(resultStatus);	}	/**	 * 	 * @return the resultMsg	 */	public static String getResultMessage(String resultStatus) {		return sResultStatus.get(resultStatus);	}	/**	 * @return the memo	 */	public String getMemo() {		return memo;	}	/**	 * @return the result	 */	public String getResult() {		return result;	}}